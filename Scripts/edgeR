#DEG analysis from the quantification results generated by salmon -Take the hormone:JA as example

##Load the required packages
library(tximport)
library(dplyr)

##Set work directory
setwd("~/OneDrive - LA TROBE UNIVERSITY/Cherishyita/00_AgriBio_labwork/00_Salmon_DEG_rmBatch/Salmon_countHPC")

##Summarize the count and TPM results for all biological samples
ja_sample_list <- read.table('./1_JA/sample_list.txt')
names(ja_sample_list) <- 'ja_sample_name'
ja_count_files <- file.path("./1_JA/",
                            paste0(ja_sample_list$ja_sample_name,'_quant'), 'quant.sf')
names(ja_count_files) <- ja_sample_list$ja_sample_name
all(file.exists(ja_count_files))
ja_txi <- tximport(ja_count_files, type = 'salmon',txOut = TRUE)
ja_count_matrix <- as.data.frame(ja_txi$counts)
ja_TPM_matrix <- as.data.frame(ja_txi$abundance)

##Write out the count and TPM matrx---these are the processed data will be uploaded to GEO
write.csv(ja_count_matrix,file = 'ja_count_matrix_from_salmon.csv', row.names = T,quote = F)
write.csv(ja_TPM_matrix,file = 'ja_TPM_matrix_from_salmon.csv', row.names = T,quote = F)

##Set work directory for differentially expressed genes analysis - JA DEGs analysis by edgeR
setwd("C:/Users/19147668/OneDrive - LA TROBE UNIVERSITY/00_AgriBio_labwork/00_Salmon_DEG_rmBatch/01_JA_rmBatch")

##Load the required packages
library(edgeR)
library(limma)

##Import the read counts
ja_count_files <- read.csv('./01JA_processed_data/ja_count_matrix_from_salmon.csv',header = TRUE,stringsAsFactors = F,row.names = 1)
ja_count_matrix <- as.data.frame(ja_count_files)

##Set sample groups 
ja_groups <- factor(c(rep("JA_0h",3),rep("JA_0.25h",3),rep("JA_0.5h",3),rep("JA_1h",3),
                      rep("JA_2h",3),rep("JA_4h",3),rep("JA_8h",3),rep("JA_12h",3),rep("JA_24h",3)))

ja_groups <-relevel(ja_groups,ref = "JA_0h")
View(ja_groups)

##Create DGE list by reading in count_matrix 
ja_genelist <- DGEList(counts = ja_count_matrix[ ,1:27], group = ja_groups)
ja_genelist$samples

##Set batch effect
Batch <- factor(rep(c("rep1","rep2","rep3"),9))
View(Batch)

##Filter out LOW expression genes
ja_keep <-filterByExpr(ja_genelist, group = ja_groups)
table(ja_keep)
ja_genelist_filted <- ja_genelist[ja_keep,, keep.lib.sizes=FALSE]
dim(ja_genelist_filted)

##TMM normalization
ja_genelist_norm <- calcNormFactors(ja_genelist_filted,method = "TMM")
ja_genelist_norm$samples$norm.factors
ja_genelist_norm$samples

##MDS Plot ---Default method is to convert to moderated logCPM and call limma plotMDS
##plotMDS(x,labels=NULL,pch=NULL,
## cex=1,dim.plot=c(1,2),
## ndim=max(dim.plot),gene.selection="pairwise",
## xlab=NULL,ylab=NULL,method="logFC",prior.count=2,plot=TRUE,...)

mds <- plotMDS(ja_genelist_norm)
mds
plot(mds$x, mds$y)
mds_data <- data.frame(x= mds$x, y= mds$y)
mds_data
mds_data$sample_name <- rownames(mds_data)
library(tidyverse)
mds_data$time_point <- str_sub(mds_data$sample_name, 1, -3)
mds_data

##Plot the MDS via ggplot
library(ggrepel)
ggplot(mds_data, aes(x, y, col=time_point)) +
  geom_point(size=3) +
  geom_text_repel(aes(label=sample_name), show.legend = F) + 
  xlab("Leading logFC  dim 1") +
  ylab('Leading logFC dim 2')+ 
  theme(legend.position = 'none')
##Save the MDS plot
ggsave('./02_JA_DEGs/ja_MDS_Plot.pdf',plot = last_plot(),height=6,width = 7)

##Data exploration ---results shows that rep1 have clear batch effect compared to rep2 and rep3
design_test <- model.matrix(~Batch+Batch:ja_groups)
design_test
logFC_test <- predFC(ja_genelist_norm,design_test,prior.count = 1,dispersion = 0.05)
cor(logFC_test[,4:6])
cor(logFC_test[,7:9])
cor(logFC_test[,10:12])
cor(logFC_test[,13:15])
##The correlation is highest between rep2  and rep3.

##Set experiment design --- add the batch effect!!!
ja_design <- model.matrix(~0+ja_groups+Batch)
rownames(ja_design)<-colnames(ja_genelist)
ja_design

##Estimating the dispersion
ja_genelist_Disp <-estimateDisp(ja_genelist_norm,ja_design,robust = TRUE)
ja_genelist_Disp$common.dispersion
plotBCV(ja_genelist_Disp)

##Quasi-likelihood (QL) pipeline
ja_fit <- glmQLFit (ja_genelist_Disp, ja_design, robust=TRUE)
plotQLDisp (ja_fit)

##Check whether there was a genuine need to adjust for batch efect
qlf_test <- glmQLFTest(ja_fit,coef = 10:11)
topTags(qlf_test)
FDR_test <-p.adjust(qlf_test$table$PValue,method = "BH")
sum(FDR_test < 0.05)
##There is considerable differential expression, justifying our decision to adjust for the batch effect

##Check the hormone effect
ja_qlf <-glmQLFTest(ja_fit,coef = 1:2)
topTags(ja_qlf)

##Look at the individual CPM for the top genes. The top genes should consistent across the three replicates
top_test <-rownames(topTags(ja_qlf))
cpm(ja_genelist_Disp)[top_test,]
##It shows that the batch effect has been corrected

###Check the sample cluster after remove batch effect
logcpm_before <-cpm(ja_genelist_norm,log = TRUE)
logcpm_after <- cpm(ja_genelist_Disp,log = TRUE)
View(logcpm_before)

library(pheatmap)
pheatmap(logcpm_before[1:2000, ],color = colorRampPalette(c("steelblue","white","darkorange2"))(100),
         cluster_rows = T, cluster_cols = T, scale = 'row',
         border_color = NA, legend = T,legend_breaks = -6:6,
         cellwidth = 12, cellheight = 0.2, fontsize_row = 12,fontsize_col = 12,
         main = "JA_samples",fontsize = 12,show_rownames = F)

pheatmap(logcpm_after[1:5000, ],color = colorRampPalette(c("steelblue","white","darkorange2"))(100),
         cluster_rows = T, cluster_cols = T, scale = 'row',
         border_color = NA, legend = T,legend_breaks = -6:6,
         cellwidth = 12, cellheight = 0.1, fontsize_row = 12,fontsize_col = 12,
         main = "JA_samples",fontsize = 12,show_rownames = F)

##Make contrast
ja_contrast <- makeContrasts(ja0_25=ja_groupsJA_0.25h-ja_groupsJA_0h,
                             ja0_5=ja_groupsJA_0.5h-ja_groupsJA_0h,
                             ja1=ja_groupsJA_1h-ja_groupsJA_0h,
                             ja2=ja_groupsJA_2h-ja_groupsJA_0h,
                             ja4=ja_groupsJA_4h-ja_groupsJA_0h,
                             ja8=ja_groupsJA_8h-ja_groupsJA_0h,
                             ja12=ja_groupsJA_12h-ja_groupsJA_0h,
                             ja24=ja_groupsJA_24h-ja_groupsJA_0h,
                             levels = ja_design)

##Conduct QL F-tests for the hormone eddect in time series and show the top genes.
qlf.ja0_25 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja0_25"])
topTags(qlf.ja0_25)
qlf.ja0_5 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja0_5"])
qlf.ja1 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja1"])
qlf.ja2 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja2"])
qlf.ja4 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja4"])
qlf.ja8 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja8"])
qlf.ja12 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja12"])
qlf.ja24 <- glmQLFTest(ja_fit,contrast = ja_contrast[,"ja24"])

##Check the DEG results
summary(decideTests(qlf.ja0_25,adjust.method = 'BH',p.value = 0.05))
summary(decideTests(qlf.ja0_5),adjust.method = 'BH',p.value = 0.05)
summary(decideTests(qlf.ja1),adjust.method = 'BH',p.value = 0.05)
summary(decideTests(qlf.ja2),adjust.method = 'BH',p.value = 0.05)
summary(decideTests(qlf.ja4),adjust.method = 'BH',p.value = 0.05)
summary(decideTests(qlf.ja8),adjust.method = 'BH',p.value = 0.05)
summary(decideTests(qlf.ja12),adjust.method = 'BH',p.value = 0.05)
summary(decideTests(qlf.ja24),adjust.method = 'BH',p.value = 0.05)

##Make plot of the DGEs
plotMD(qlf.ja0_25)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja0_5)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja1)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja2)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja4)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja8)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja12)
abline(h=c(-1,1),col="blue")
plotMD(qlf.ja24)
abline(h=c(-1,1),col="blue")

##Narrow down the list of DE genes by using FDR0.01, check the DEG results
FDR0.25 <-p.adjust(qlf.ja0_25$table$PValue, method = "BH")
sum(FDR0.25 < 0.01)
FDR0.5 <-p.adjust(qlf.ja0_5$table$PValue, method = "BH")
sum(FDR0.5 < 0.01)
FDR1 <-p.adjust(qlf.ja1$table$PValue, method = "BH")
sum(FDR1 < 0.01)
FDR2 <-p.adjust(qlf.ja2$table$PValue, method = "BH")
sum(FDR2 < 0.01)
FDR4 <-p.adjust(qlf.ja4$table$PValue, method = "BH")
sum(FDR4 < 0.01)
FDR8 <-p.adjust(qlf.ja8$table$PValue, method = "BH")
sum(FDR8 < 0.01)
FDR12 <-p.adjust(qlf.ja12$table$PValue, method = "BH")
sum(FDR12 < 0.01)
FDR24 <-p.adjust(qlf.ja24$table$PValue, method = "BH")
sum(FDR24 < 0.01)

##Write out DEG results
ja0.25DEG <- topTags(qlf.ja0_25,n=nrow(ja_count_matrix))
ja0.25DEG <- as.data.frame(ja0.25DEG)
write.csv(ja0.25DEG,"./02_JA_DEGs/ja0.25_edger.csv",quote = F)

ja0.5DEG=topTags(qlf.ja0_5,n=nrow(ja_count_matrix))
ja0.5DEG=as.data.frame(ja0.5DEG)
write.csv(ja0.5DEG,"./02_JA_DEGs/ja0.5_edger.csv",quote = F)

ja1DEG=topTags(qlf.ja1,n=nrow(ja_count_matrix))
ja1DEG=as.data.frame(ja1DEG)
write.csv(ja1DEG,"./02_JA_DEGs/ja1_edger.csv",quote = F)

ja2DEG=topTags(qlf.ja2,n=nrow(ja_count_matrix))
ja2DEG=as.data.frame(ja2DEG)
write.csv(ja2DEG,"./02_JA_DEGs/ja2_edger.csv",quote = F)

ja4DEG=topTags(qlf.ja4,n=nrow(ja_count_matrix))
ja4DEG=as.data.frame(ja4DEG)
write.csv(ja4DEG,"./02_JA_DEGs/ja4_edger.csv",quote = F)

ja8DEG=topTags(qlf.ja8,n=nrow(ja_count_matrix))
ja8DEG=as.data.frame(ja8DEG)
write.csv(ja8DEG,"./02_JA_DEGs/ja8_edger.csv",quote = F)

ja12DEG=topTags(qlf.ja12,n=nrow(ja_count_matrix))
ja12DEG=as.data.frame(ja12DEG)
write.csv(ja12DEG,"./02_JA_DEGs/ja12_edger.csv",quote = F)

ja24DEG=topTags(qlf.ja24,n=nrow(ja_count_matrix))
ja24DEG=as.data.frame(ja24DEG)
write.csv(ja24DEG,"./02_JA_DEGs/ja24_edger.csv",quote = F)

##Prepare the expression file for SDREM
###JA--ja0.25DEG---ja24DEG
ja0.25_v1 <- ja0.25DEG[rownames(ja0.25DEG)[order(rownames(ja0.25DEG),decreasing = F)],]
ja0.5_v1 <- ja0.5DEG[rownames(ja0.5DEG)[order(rownames(ja0.5DEG),decreasing = F)],]
ja1_v1 <- ja1DEG[rownames(ja1DEG)[order(rownames(ja1DEG),decreasing = F)],]
ja2_v1 <- ja2DEG[rownames(ja2DEG)[order(rownames(ja2DEG),decreasing = F)],]
ja4_v1 <- ja4DEG[rownames(ja4DEG)[order(rownames(ja4DEG),decreasing = F)],]
ja8_v1 <- ja8DEG[rownames(ja8DEG)[order(rownames(ja8DEG),decreasing = F)],]
ja12_v1 <- ja12DEG[rownames(ja12DEG)[order(rownames(ja12DEG),decreasing = F)],]
ja24_v1 <- ja24DEG[rownames(ja24DEG)[order(rownames(ja24DEG),decreasing = F)],]

JA_DEG_matrix <- cbind(ja0.25_v1,ja0.5_v1,ja1_v1,ja2_v1,ja4_v1,ja8_v1,ja12_v1,ja24_v1)
JA_DEG_matrix <-JA_DEG_matrix[ ,c(1,6,11,16,21,26,31,36)]
colnames(JA_DEG_matrix) <- c("0.25h","0.5h",'1h','2h','4h','8h','12h','24h')
write.csv(JA_DEG_matrix,"./03_Log2FC_matrix_forSDREM/JA_DEG_matrix.csv",quote = F)


##Extract the TPM values of DEGs for clust
###Import read counts
setwd("C:/Users/19147668/OneDrive - LA TROBE UNIVERSITY/00_AgriBio_labwork/00_Salmon_DEG_rmBatch/01_JA_rmBatch")

JA_TPM_files <- read.csv('./01JA_processed_data/ja_TPM_matrix_from_salmon.csv',
                         header = TRUE,stringsAsFactors = F)
                         
###Import the ID list of DEGs
JA_DEG_ID <-read.csv("./05_DEG_ID_for_clust/JA_DEG_ID_FDR0.01.csv",header = FALSE,stringsAsFactors = F)

###Extract the TPM values of only DEGs
JA_DEG_TPM <- merge(JA_TPM_files,JA_DEG_ID,by.x = 'X',by.y = 'V1')

###Re name the column name 
names(JA_DEG_TPM) <- c('GeneID','0h_rep1','0h_rep2','0h_rep3','0.25h_rep1','0.25h_rep2','0.25h_rep3',
                        '0.5h_rep1','0.5h_rep2','0.5h_rep3','1h_rep1','1h_rep2','1h_rep3',
                        '2h_rep1','2h_rep2','2h_rep3','4h_rep1','4h_rep2','4h_rep3','8h_rep1','8h_rep2','8h_rep3',
                        '12h_rep1','12h_rep2','12h_rep3','24h_rep1','24h_rep2','24h_rep3')

###Write out the DEG_TPM_Matrix
write.table(JA_DEG_TPM,file='./05_DEG_ID_for_clust/JA_DEG_TPM.txt',quote = F, row.names = F, sep = '\t')


